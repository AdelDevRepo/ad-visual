service: ai-image-gallery

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    BUCKET_NAME: ai-image-gallery-${self:provider.stage}-ad-visual
    TABLE_NAME: ai-image-gallery-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE_NAME}
    - Effect: Allow
      Action:
        - bedrock:InvokeModel
      Resource: "*"

functions:
  generateImage:
    handler: handler.generateImage
    events:
      - http:
          path: generate
          method: post
          cors: true
  searchImages:
    handler: handler.searchImages
    events:
      - http:
          path: search
          method: get
          cors: true
  getGalleryImages:
    handler: handler.getGalleryImages
    events:
      - http:
          path: images
          method: get
          cors: true

resources:
  Resources:
    ImageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - 'https://main3.dhtmpsa6cbgbg.amplifyapp.com'
              MaxAge: 3000
    ImageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: createdAt-index
            KeySchema:
              - AttributeName: id
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true